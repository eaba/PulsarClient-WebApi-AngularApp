#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#
#
# docker-compose -f docker-compose-edge.yml up

version: '3.8'

networks:
  pulsar:
    driver: bridge

services:  
  
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar-all:3.1.0
    command: bin/init-cluster.sh
    environment:
      clusterName: test
      zkServers: 192.168.0.131:2181
      configurationStore: 192.168.0.131:2181
    volumes:
      - ./conf1:/conf
      - ./scripts:/scripts
      - ./scripts/init-cluster.sh/:/pulsar/bin/init-cluster.sh:z
    networks:
      pulsar:

  broker1:
    hostname: broker1
    ports:
      - "192.168.0.114:6650:6650"
      - "192.168.0.114:8010:8080"
    container_name: broker1
    image: apachepulsar/pulsar-all:3.1.0
    restart: on-failure
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf && \
               bin/apply-config-from-env.py conf/pulsar_env.sh && \
               # bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar broker"
    environment:
      PULSAR_BROKER_CONF: /conf/broker.conf
      clusterName: test
      zookeeperServers: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      configurationStore: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      webSocketServiceEnabled: "true"
      functionsWorkerEnabled: "true"
      PULSAR_PREFIX_systemTopicEnabled: "true"
      PULSAR_PREFIX_topicLevelPoliciesEnabled: "true"
    volumes:
      - ./scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py:z
      - ./conf1:/conf
      - ./scripts:/scripts
    depends_on:
      - pulsar-init
    networks:
      pulsar:

  broker2:
    hostname: broker2
    ports:
      - "192.168.0.114:6652:6650"
      - "192.168.0.114:8020:8080"
    container_name: broker2
    image: apachepulsar/pulsar-all:3.1.0
    restart: on-failure
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf && \
               bin/apply-config-from-env.py conf/pulsar_env.sh && \
               # bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar broker"
    environment:
      PULSAR_BROKER_CONF: /conf/broker.conf
      clusterName: test
      zookeeperServers: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      configurationStore: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      webSocketServiceEnabled: "true"
      functionsWorkerEnabled: "true"
      PULSAR_PREFIX_systemTopicEnabled: "true"
      PULSAR_PREFIX_topicLevelPoliciesEnabled: "true"
    volumes:
      - ./scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py:z
      - ./conf1:/conf
      - ./scripts:/scripts
    depends_on:
      - pulsar-init
      - broker1
    networks:
      pulsar:

  broker3:
    hostname: broker3
    ports:
      - "192.168.0.114:6653:6650"
      - "192.168.0.114:8030:8080"
    container_name: broker3
    image: apachepulsar/pulsar-all:3.1.0
    restart: on-failure
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf && \
               bin/apply-config-from-env.py conf/pulsar_env.sh && \
               # bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar broker"
    environment:
      PULSAR_BROKER_CONF: /conf/broker.conf
      clusterName: test
      zookeeperServers: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      configurationStore: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      webSocketServiceEnabled: "true"
      functionsWorkerEnabled: "true"
      PULSAR_PREFIX_systemTopicEnabled: "true"
      PULSAR_PREFIX_topicLevelPoliciesEnabled: "true"
    volumes:
      - ./scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py:z
      - ./conf1:/conf
      - ./scripts:/scripts
    depends_on:
      - pulsar-init
      - broker1
      - broker2
    networks:
      pulsar:
  
  sql1:
    hostname: sql1
    ports:
      - "192.168.0.114:8081:8081"
    container_name: sql1
    image: apachepulsar/pulsar-all:3.1.0
    restart: on-failure
    command: >
      bash -c "bin/apply-config-from-env-with-prefix.py SQL_PREFIX_ trino/conf/catalog/pulsar.properties && \
               bin/apply-config-from-env.py conf/pulsar_env.sh && \
               # bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar sql-worker run"
    environment:    
      clusterName: test
      zookeeperServers: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      configurationStoreServers: 192.168.0.131:2181,192.168.0.131:2182,192.168.0.131:2183
      pulsar.zookeeper-uri: 192.168.0.131:2181
      pulsar.web-service-url: http://192.168.0.114:8010
      pulsar.metadata-url: 192.168.0.131:2181
      pulsar.broker-binary-service-url: pulsar://192.168.0.114:6650
      coordinator: "true"
    volumes:
      - ./scripts/apply-config-from-env-with-prefix.py:/pulsar/bin/apply-config-from-env-with-prefix.py:z
      - ./scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py:z
      - ./trino/conf/catalog/pulsar.properties:/pulsar/trino/conf/catalog/pulsar.properties
    depends_on:
      - pulsar-init
      - broker1
    networks:
      pulsar:

  manager:
    hostname: manager
    container_name: manager
    image: apachepulsar/pulsar-manager:v0.4.0
    ports:
      - "192.168.0.114:9527:9527"
      - "192.168.0.114:7750:7750"
    depends_on:
      - broker1
    volumes:
      - "./data/:/data:z"
      # - "./manager/application.properties:/pulsar-manager/pulsar-manager/application.properties"
    environment:
      # REDIRECT_HOST: "http://127.0.0.1"
      # REDIRECT_PORT: "9527"
      DRIVER_CLASS_NAME: "org.postgresql.Driver"
      URL: "jdbc:postgresql://127.0.0.1:5432/pulsar_manager"
      USERNAME: "pulsar"
      PASSWORD: "pulsar"
      LOG_LEVEL: "DEBUG"
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties
    networks:
      pulsar:
